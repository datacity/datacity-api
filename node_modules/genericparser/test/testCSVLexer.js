var testLexer = require("../lib/lexerCSV.js");
var should = require("should");
var colors = require("colors");

function printError(message) {
    var space = "        ➢ ";
    console.log((space + message).red);
}

function printSuccess(message) {
    var space = "        ➢ ";
    console.log((space + message).blue);
}

describe("Csv lexer: ",function(){
     it ("Should test the error function", function(done){
        var lex = new testLexer();
         lex.on("error", function(e) {
          done();
          printError(e); 
         
       });
       lex.error(new Error("Test my error"));
    });
    it ("Should test the parseLines function", function(done){
        var lex = new testLexer();
       lex.parseLines(["{'id': '5', 'name': 'raphael', 'age': '22'}","{'id': '6', 'name': 'cyril', 'age': '22'}"]);
       done();
    });
    it ("Should give invalid parameters on parseLines and get proper error", function(done){
        var lex = new testLexer();
         lex.on("error", function(e) {
           done();
           printError(e);   
       });
       lex.parseLines(["{'id': '5', 'name': 'raphael', 'age': '22'}"]);
      
    });
    it ("Should test the extractLines function", function(done){
        var lex = new testLexer();
      lex.extractLines(__dirname + "/files/input/test.csv", function(content) {
        content.should.be.instanceof(Array);
        done();
       });
    });
    it ("Should test the parse function with a file of many separators and the : should not be considered as separator", function(done){
       var lex = new testLexer(done);
        lex.on("error", function(e) {
           printError(e);   
       });
       lex.on("done", function(options) {
            done();
            printSuccess(JSON.stringify(options));
            
       })
       lex.parse(__dirname + "/files/input/testLexer.csv");
    });
     it ("Should test the parse function with a file of separator ;", function(done){
       var lex = new testLexer(done);
        lex.on("error", function(e) {
           printError(e);   
       });
       lex.on("done", function(options) {
            done();
            printSuccess(JSON.stringify(options));
       })
       lex.parse(__dirname + "/files/input/test.csv");
    });
     it ("Should test the parse function with a file of separator tab", function(done){
       var lex = new testLexer();
        lex.on("error", function(e) {
           printError(e);   
       });
       lex.on("done", function(options) {
            options.delimiter.should.eql("\t");
            done();
            printSuccess(JSON.stringify(options));
       })
       lex.parse(__dirname + "/files/input/testLexerTabSep.csv");
    });
    it ("Should test the parse function with a file of separator : ", function(done){
       var lex = new testLexer();
        lex.on("error", function(e) {
            printError(e);   
       });
       lex.on("done", function(options) {
           done();
           printSuccess(JSON.stringify(options));
       });
       lex.parse(__dirname + "/files/input/testLexerColoneSep.csv");
    });
    it ("Should test the parse function with separator and fields surrounded by simple quote", function(done){
       var lex = new testLexer();
        lex.on("error", function(e) {
            printError(e);   
       });
       lex.on("done", function(options) {
           done();
           printSuccess(JSON.stringify(options));
       });
       lex.parse(__dirname + "/files/input/testLexerQuote.csv");
    });
});



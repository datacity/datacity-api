var fs = require("fs");

function serializeJSON(currentKey, currentObject, result, isArray, isObject) {
    for (var key in currentObject) {
        if (isNaN(parseInt(key)) === false && (typeof currentObject[key] === "string" || typeof currentObject[key] === "number")) {
             result[currentKey] = [];
             result[currentKey] = currentObject;
             break;
        }
        else if ((typeof currentObject[key] === "string" || typeof currentObject[key] === "number") && isArray === false)
            result[currentKey+"_"+key] = currentObject[key];
        else if ((typeof currentObject[key] === "string" || typeof currentObject[key] === "number") && isArray === true) {
            if (!result[currentKey+"_"+key])
                result[currentKey+"_"+key] = currentObject[key];
            else
                result[currentKey+"_"+key] += "/" + currentObject[key];
        }
        if (currentObject[key] instanceof Array && isObject === true)
            serializeJSON(currentKey+"_"+key, currentObject[key], result, false);
        else if (currentObject[key] instanceof Array && isObject === false) 
            serializeJSON(key, currentObject[key], result, true, false);
        else if (currentObject[key] instanceof Object && isArray === false && isObject === true)
            serializeJSON(currentKey+"_"+key, currentObject[key], result, false, true);
        else if (currentObject[key] instanceof Object && isArray === false)
            serializeJSON(key, currentObject[key], result, false, true);
        else if (currentObject[key] instanceof Object && isArray === true)
            serializeJSON(currentKey, currentObject[key], result, true, true);
    }
}

function parseJSON(fileName, callback) {
      if (fs.existsSync(fileName) === false) {
        console.log("erreur : le fichier n'existe pas !");
        return;
    }
    var stream = fs.createReadStream(fileName);
    //stream.setEncoding('utf8');
    stream.on('data', function(sdata) {
     var json = JSON.parse(sdata.toString().replace(/\\/g, ""));
     var result = {};
     var main = [];
     
     var keys = Object.keys(json);
      for (var index in keys ) {
          if (json[keys[index]] instanceof Array) {
             if (json[keys[index]][0] && json[keys[index]][0] instanceof Object)
               for (var obj in json[keys[index]]) {
                   result = {};
                   serializeJSON("", json[keys[index]][obj], result, false, false);
                   main.push(result);
               }
               break;
          }
      }
      callback(main);
    });
    stream.on("end", function() {
       console.log("finit le parsing"); 
    });
}

function parserJSON() {
    this.parse = parseJSON;
    return this;
}

/*parserJSON().parse(__dirname+"/../test/files/input/JSON_TelephonePublic.json", function(data) {
    var stream = fs.createWriteStream(__dirname+"/../test/files/output/JSON_TelephonePublicParse.json");
    stream.write(JSON.stringify(data));
});*/

parserJSON().parse(__dirname+"/../test/files/input/JSON_test2.json", function(data) {
    var stream = fs.createWriteStream(__dirname+"/../test/files/output/JSON_test2Parse.json");
    stream.write(JSON.stringify(data));
});

//module.exports = parserJSON;
var fs = require('fs');
var xml2js = require('xml2js');
var events = require("events");
var jsonParser = require('./parserJSON.js');


function getFirstArray(obj) {
    for(var key in obj) {
        var elem = obj[key];

        if(Object.prototype.toString.apply(elem) === '[object Array]') {
            return elem;
        }

        if(typeof elem === "object") {
            var ret = getFirstArray(elem);
            if (ret) {
            	return ret;
            }
        }
    }
    return false;
}

var parseXML = function(fileName, noRam, callback) {
    console.log("on rentre dans le parseXML");
    console.log(fileName);
    var XMLparser = new xml2js.Parser({explicitArray: false});
   
    fs.readFile(fileName, function(err, data) {
        console.log(data);
    	XMLparser.parseString(data, function (err, result) {
			var first = getFirstArray(result);

   			// var str = JSON.stringify(first);
    		// var parser = new jsonParser();
    		callback(first, first.length);
    		//parser.parseString(str, noRam, callback);
        });
    });
};

function parserXML() {
    this.parse = parseXML;
    console.log("parser xml init");
    return this;
}

parserXML.prototype.__proto__ = events.EventEmitter.prototype;
module.exports = parserXML;